swagger: "2.0"
info:
  version: "0.0.1"
  title: Object Writter
  description: The micro-service intended to provide the mechanisum to store the objects to the minio server.
  contact:
    email: prasanna@makonlinesolutions.com
host: localhost:5001
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
paths:
  /system-health:
    x-swagger-router-controller: system.controller
    get:
      description: Returns the systems cpu information
      operationId: getHealthCheck
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SystemHealthResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /registry/upload:
    x-swagger-router-controller: registry.controller
    post:
      summary: Upload Object
      description: Upload a object into registry
      operationId: upload
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The Object to upload into registry
        - in: query
          name: userId
          type: string
          description: UserId for the encryption of the file
      responses:
        "200":
          description: Success
          schema:
            properties:
              id:
                type: integer
                format: int32
              name:
                description: "Name of the object stored in minio"
                type: string
              type:
                description: "mime type of the object"
                type: string
              size:
                type: integer
                description: "Size of an object"
                format: int32
              url:
                type: string
                description: "Key require to access the object from object reader"
              bucket:
                type: string
                description: "Bucket name in which the object is stored"
              updatedAt:
                type: string
                description: "Bucket name in which the object is stored"
              createdAt:
                type: string
        "400":
          description: Error
          schema:
            properties:
              message:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /registry/create:
    x-swagger-router-controller: registry.controller
    post:
      summary: Authenticate Registered user
      tags:
        - "user"
      description: Authenticate Registered user
      operationId: create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: login body object
          description: username password to perform authentication
          schema:
            type: object
            required:
              - name
              - type
              - size
              - url
              - bucket
            properties:
              name:
                type: string
              type:
                type: string
              size:
                type: integer
              url:
                type: string
              bucket:
                type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              _id:
                type: string
                description: "Mongo Object Id ( user id )"
              firstName:
                description: "Registered users first name"
                type: string
              lastName:
                description: "Registered user last name"
                type: string
              email:
                type: string
                description: "Registered users email address"
              role:
                type: string
                description: "Access role assigned to the authenticated user"
              createdAt:
                type: string
                description: "Timestamp when the user object is created"
              updatedAt:
                type: string
                description: "Timestamp when the user object is modified"
              access:
                type: object
                description: Contains token and expiry timestamp for access token
              refresh:
                type: object
                description: Contains token and expiry timestamp for refresh token
        "400":
          description: Bad Request entry, in case validation failed or missing of required parameters
          schema:
            properties:
              statusCode:
                type: integer
                description: "statusCode for response to the request"
              title:
                type: string
                description: "HTTP status code title for the response"
              message:
                type: string
                description: "Short message about the error or missing information in request"
              info:
                type: object
                description: "Error object"
        "500":
          description: Internal server error
          schema:
            properties:
              statusCode:
                type: integer
                description: "statusCode for response to the request"
              title:
                type: string
                description: "HTTP status code title for the response"
              message:
                type: string
                description: "Short message about the error or missing information in request"
        default:
          description: Error
          schema:
            properties:
              statusCode:
                type: integer
                description: statusCode for response to the request
              title:
                type: string
                description: HTTP status code title for the response
              message:
                type: string
                description: Short message about the error or missing information in request
definitions:
  SystemHealthResponse:
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
